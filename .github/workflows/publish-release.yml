name: Release Package

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Specify the type of version bump"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - none
      package:
        description: "Specify the package to publish"
        required: true
        type: choice
        options:
          - "@skyhelperbot/utils"
          - "@skyhelperbot/constants"
          - "@skyhelperbot/jobs"
          - "@skyhelperbot/docs"
          - "@skyhelperbot/website"
          - "skyhelper"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v5

      - name: Install dependencies
        run: |
          pnpm config set loglevel error
          pnpm i --frozen-lockfile

      - name: Build the project
        run: pnpm run build

      - name: Setup git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: bump_version
        if: ${{ github.event.inputs.version_type != 'none' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          raw_version=$(pnpm --filter '${{ github.event.inputs.package }}' exec pnpm version ${{ github.event.inputs.version_type }} --no-git-tag-version)

          new_version=${raw_version#v}
          echo "new_version=${new_version}" >> $GITHUB_ENV

          git checkout -b release/${{ github.event.inputs.package }}-${new_version}
          git add .
          git commit -m "chore(release): bump ${{ github.event.inputs.package }} to ${new_version}"

          git push --set-upstream origin release/${{ github.event.inputs.package }}-${new_version}

          pr_url=$(gh pr create --base main --head release/${{ github.event.inputs.package }}-${new_version} --title "chore: release ${{ github.event.inputs.package }} v${new_version}" --body "Automated version bump for ${{ github.event.inputs.package }} v${new_version}")
          pr_number=$(echo $pr_url | grep -o -E '[0-9]+$')
          echo "pr_number=${pr_number}" >> $GITHUB_ENV

      - name: Create release
        id: process-prs
        run: node ./scripts/create-release.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          new_version: ${{ env.new_version }}
          pr_number: ${{ env.pr_number }}
          package: ${{ github.event.inputs.package }}
